/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import com.microsoft.azure.servicefabric.RegistryCredential;
import com.microsoft.azure.servicefabric.UpgradeKind;
import com.microsoft.azure.servicefabric.UpgradeMode;
import com.microsoft.azure.servicefabric.MonitoringPolicyDescription;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Describes the parameters for a compose deployment upgrade.
 */
public class ComposeDeploymentUpgradeDescriptionInner {
    /**
     * The name of the deployment.
     */
    @JsonProperty(value = "DeploymentName", required = true)
    private String deploymentName;

    /**
     * The content of the compose file that describes the deployment to create.
     */
    @JsonProperty(value = "ComposeFileContent", required = true)
    private String composeFileContent;

    /**
     * Credential information to connect to container registry.
     */
    @JsonProperty(value = "RegistryCredential")
    private RegistryCredential registryCredential;

    /**
     * The kind of upgrade out of the following possible values. Possible
     * values include: 'Invalid', 'Rolling'.
     */
    @JsonProperty(value = "UpgradeKind", required = true)
    private UpgradeKind upgradeKind;

    /**
     * The mode used to monitor health during a rolling upgrade. The values are
     * UnmonitoredAuto, UnmonitoredManual, and Monitored. Possible values
     * include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual', 'Monitored'.
     */
    @JsonProperty(value = "RollingUpgradeMode")
    private UpgradeMode rollingUpgradeMode;

    /**
     * The maximum amount of time to block processing of an upgrade domain and
     * prevent loss of availability when there are unexpected issues. When this
     * timeout expires, processing of the upgrade domain will proceed
     * regardless of availability loss issues. The timeout is reset at the
     * start of each upgrade domain. Valid values are between 0 and 42949672925
     * inclusive. (unsigned 32-bit integer).
     */
    @JsonProperty(value = "UpgradeReplicaSetCheckTimeoutInSeconds")
    private Long upgradeReplicaSetCheckTimeoutInSeconds;

    /**
     * If true, then processes are forcefully restarted during upgrade even
     * when the code version has not changed (the upgrade only changes
     * configuration or data).
     */
    @JsonProperty(value = "ForceRestart")
    private Boolean forceRestart;

    /**
     * Describes the parameters for monitoring an upgrade in Monitored mode.
     */
    @JsonProperty(value = "MonitoringPolicy")
    private MonitoringPolicyDescription monitoringPolicy;

    /**
     * Defines a health policy used to evaluate the health of an application or
     * one of its children entities.
     */
    @JsonProperty(value = "ApplicationHealthPolicy")
    private ApplicationHealthPolicyInner applicationHealthPolicy;

    /**
     * Get the deploymentName value.
     *
     * @return the deploymentName value
     */
    public String deploymentName() {
        return this.deploymentName;
    }

    /**
     * Set the deploymentName value.
     *
     * @param deploymentName the deploymentName value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withDeploymentName(String deploymentName) {
        this.deploymentName = deploymentName;
        return this;
    }

    /**
     * Get the composeFileContent value.
     *
     * @return the composeFileContent value
     */
    public String composeFileContent() {
        return this.composeFileContent;
    }

    /**
     * Set the composeFileContent value.
     *
     * @param composeFileContent the composeFileContent value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withComposeFileContent(String composeFileContent) {
        this.composeFileContent = composeFileContent;
        return this;
    }

    /**
     * Get the registryCredential value.
     *
     * @return the registryCredential value
     */
    public RegistryCredential registryCredential() {
        return this.registryCredential;
    }

    /**
     * Set the registryCredential value.
     *
     * @param registryCredential the registryCredential value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withRegistryCredential(RegistryCredential registryCredential) {
        this.registryCredential = registryCredential;
        return this;
    }

    /**
     * Get the upgradeKind value.
     *
     * @return the upgradeKind value
     */
    public UpgradeKind upgradeKind() {
        return this.upgradeKind;
    }

    /**
     * Set the upgradeKind value.
     *
     * @param upgradeKind the upgradeKind value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withUpgradeKind(UpgradeKind upgradeKind) {
        this.upgradeKind = upgradeKind;
        return this;
    }

    /**
     * Get the rollingUpgradeMode value.
     *
     * @return the rollingUpgradeMode value
     */
    public UpgradeMode rollingUpgradeMode() {
        return this.rollingUpgradeMode;
    }

    /**
     * Set the rollingUpgradeMode value.
     *
     * @param rollingUpgradeMode the rollingUpgradeMode value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withRollingUpgradeMode(UpgradeMode rollingUpgradeMode) {
        this.rollingUpgradeMode = rollingUpgradeMode;
        return this;
    }

    /**
     * Get the upgradeReplicaSetCheckTimeoutInSeconds value.
     *
     * @return the upgradeReplicaSetCheckTimeoutInSeconds value
     */
    public Long upgradeReplicaSetCheckTimeoutInSeconds() {
        return this.upgradeReplicaSetCheckTimeoutInSeconds;
    }

    /**
     * Set the upgradeReplicaSetCheckTimeoutInSeconds value.
     *
     * @param upgradeReplicaSetCheckTimeoutInSeconds the upgradeReplicaSetCheckTimeoutInSeconds value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withUpgradeReplicaSetCheckTimeoutInSeconds(Long upgradeReplicaSetCheckTimeoutInSeconds) {
        this.upgradeReplicaSetCheckTimeoutInSeconds = upgradeReplicaSetCheckTimeoutInSeconds;
        return this;
    }

    /**
     * Get the forceRestart value.
     *
     * @return the forceRestart value
     */
    public Boolean forceRestart() {
        return this.forceRestart;
    }

    /**
     * Set the forceRestart value.
     *
     * @param forceRestart the forceRestart value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withForceRestart(Boolean forceRestart) {
        this.forceRestart = forceRestart;
        return this;
    }

    /**
     * Get the monitoringPolicy value.
     *
     * @return the monitoringPolicy value
     */
    public MonitoringPolicyDescription monitoringPolicy() {
        return this.monitoringPolicy;
    }

    /**
     * Set the monitoringPolicy value.
     *
     * @param monitoringPolicy the monitoringPolicy value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withMonitoringPolicy(MonitoringPolicyDescription monitoringPolicy) {
        this.monitoringPolicy = monitoringPolicy;
        return this;
    }

    /**
     * Get the applicationHealthPolicy value.
     *
     * @return the applicationHealthPolicy value
     */
    public ApplicationHealthPolicyInner applicationHealthPolicy() {
        return this.applicationHealthPolicy;
    }

    /**
     * Set the applicationHealthPolicy value.
     *
     * @param applicationHealthPolicy the applicationHealthPolicy value to set
     * @return the ComposeDeploymentUpgradeDescriptionInner object itself.
     */
    public ComposeDeploymentUpgradeDescriptionInner withApplicationHealthPolicy(ApplicationHealthPolicyInner applicationHealthPolicy) {
        this.applicationHealthPolicy = applicationHealthPolicy;
        return this;
    }

}
