/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.microsoft.azure.servicefabric.implementation.ProvisionApplicationTypeDescriptionBaseInner;

/**
 * Describes the operation to register or provision an application type using
 * an application package from an external store instead of a package uploaded
 * to the Service Fabric image store.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("ExternalStore")
public class ExternalStoreProvisionApplicationTypeDescription extends ProvisionApplicationTypeDescriptionBaseInner {
    /**
     * The path to the '.sfpkg' application package from where the application
     * package can be downloaded using HTTP or HTTPS protocols. The application
     * package can be stored in an external store that provides GET operation
     * to download the file. Supported protocols are HTTP and HTTPS, and the
     * path must allow READ access.
     */
    @JsonProperty(value = "ApplicationPackageDownloadUri", required = true)
    private String applicationPackageDownloadUri;

    /**
     * The application type name represents the name of the application type
     * found in the application manifest.
     */
    @JsonProperty(value = "ApplicationTypeName", required = true)
    private String applicationTypeName;

    /**
     * The application type version represents the version of the application
     * type found in the application manifest.
     */
    @JsonProperty(value = "ApplicationTypeVersion", required = true)
    private String applicationTypeVersion;

    /**
     * Get the applicationPackageDownloadUri value.
     *
     * @return the applicationPackageDownloadUri value
     */
    public String applicationPackageDownloadUri() {
        return this.applicationPackageDownloadUri;
    }

    /**
     * Set the applicationPackageDownloadUri value.
     *
     * @param applicationPackageDownloadUri the applicationPackageDownloadUri value to set
     * @return the ExternalStoreProvisionApplicationTypeDescription object itself.
     */
    public ExternalStoreProvisionApplicationTypeDescription withApplicationPackageDownloadUri(String applicationPackageDownloadUri) {
        this.applicationPackageDownloadUri = applicationPackageDownloadUri;
        return this;
    }

    /**
     * Get the applicationTypeName value.
     *
     * @return the applicationTypeName value
     */
    public String applicationTypeName() {
        return this.applicationTypeName;
    }

    /**
     * Set the applicationTypeName value.
     *
     * @param applicationTypeName the applicationTypeName value to set
     * @return the ExternalStoreProvisionApplicationTypeDescription object itself.
     */
    public ExternalStoreProvisionApplicationTypeDescription withApplicationTypeName(String applicationTypeName) {
        this.applicationTypeName = applicationTypeName;
        return this;
    }

    /**
     * Get the applicationTypeVersion value.
     *
     * @return the applicationTypeVersion value
     */
    public String applicationTypeVersion() {
        return this.applicationTypeVersion;
    }

    /**
     * Set the applicationTypeVersion value.
     *
     * @param applicationTypeVersion the applicationTypeVersion value to set
     * @return the ExternalStoreProvisionApplicationTypeDescription object itself.
     */
    public ExternalStoreProvisionApplicationTypeDescription withApplicationTypeVersion(String applicationTypeVersion) {
        this.applicationTypeVersion = applicationTypeVersion;
        return this;
    }

}
