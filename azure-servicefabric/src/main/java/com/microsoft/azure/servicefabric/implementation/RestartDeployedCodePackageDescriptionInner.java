/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Defines description for restarting a deployed code package on Service Fabric
 * node.
 */
public class RestartDeployedCodePackageDescriptionInner {
    /**
     * The name of service manifest that specified this code package.
     */
    @JsonProperty(value = "ServiceManifestName", required = true)
    private String serviceManifestName;

    /**
     * The ActivationId of a deployed service package. If
     * ServicePackageActivationMode specified at the time of creating the
     * service
     * is 'SharedProcess' (or if it is not specified, in which case it defaults
     * to 'SharedProcess'), then value of ServicePackageActivationId
     * is always an empty string.
     */
    @JsonProperty(value = "ServicePackageActivationId")
    private String servicePackageActivationId;

    /**
     * The name of the code package defined in the service manifest.
     */
    @JsonProperty(value = "CodePackageName", required = true)
    private String codePackageName;

    /**
     * The instance ID for currently running entry point. For a code package
     * setup entry point (if specified) runs first and after it finishes main
     * entry point is started.
     * Each time entry point executable is run, its instance ID will change. If
     * 0 is passed in as the code package instance ID, the API will restart the
     * code package with whatever instance ID it is currently running.
     * If an instance ID other than 0 is passed in, the API will restart the
     * code package only if the current Instance ID matches the passed in
     * instance ID.
     * Note, passing in the exact instance ID (not 0) in the API is safer,
     * because if ensures at most one restart of the code package.
     */
    @JsonProperty(value = "CodePackageInstanceId", required = true)
    private String codePackageInstanceId;

    /**
     * Get the serviceManifestName value.
     *
     * @return the serviceManifestName value
     */
    public String serviceManifestName() {
        return this.serviceManifestName;
    }

    /**
     * Set the serviceManifestName value.
     *
     * @param serviceManifestName the serviceManifestName value to set
     * @return the RestartDeployedCodePackageDescriptionInner object itself.
     */
    public RestartDeployedCodePackageDescriptionInner withServiceManifestName(String serviceManifestName) {
        this.serviceManifestName = serviceManifestName;
        return this;
    }

    /**
     * Get the servicePackageActivationId value.
     *
     * @return the servicePackageActivationId value
     */
    public String servicePackageActivationId() {
        return this.servicePackageActivationId;
    }

    /**
     * Set the servicePackageActivationId value.
     *
     * @param servicePackageActivationId the servicePackageActivationId value to set
     * @return the RestartDeployedCodePackageDescriptionInner object itself.
     */
    public RestartDeployedCodePackageDescriptionInner withServicePackageActivationId(String servicePackageActivationId) {
        this.servicePackageActivationId = servicePackageActivationId;
        return this;
    }

    /**
     * Get the codePackageName value.
     *
     * @return the codePackageName value
     */
    public String codePackageName() {
        return this.codePackageName;
    }

    /**
     * Set the codePackageName value.
     *
     * @param codePackageName the codePackageName value to set
     * @return the RestartDeployedCodePackageDescriptionInner object itself.
     */
    public RestartDeployedCodePackageDescriptionInner withCodePackageName(String codePackageName) {
        this.codePackageName = codePackageName;
        return this;
    }

    /**
     * Get the codePackageInstanceId value.
     *
     * @return the codePackageInstanceId value
     */
    public String codePackageInstanceId() {
        return this.codePackageInstanceId;
    }

    /**
     * Set the codePackageInstanceId value.
     *
     * @param codePackageInstanceId the codePackageInstanceId value to set
     * @return the RestartDeployedCodePackageDescriptionInner object itself.
     */
    public RestartDeployedCodePackageDescriptionInner withCodePackageInstanceId(String codePackageInstanceId) {
        this.codePackageInstanceId = codePackageInstanceId;
        return this;
    }

}
