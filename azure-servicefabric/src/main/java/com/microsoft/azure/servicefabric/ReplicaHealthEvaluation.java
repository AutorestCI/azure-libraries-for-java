/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import java.util.UUID;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Represents health evaluation for a replica, containing information about the
 * data and the algorithm used by health store to evaluate health. The
 * evaluation is returned only when the aggregated health state is either Error
 * or Warning.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("Replica")
public class ReplicaHealthEvaluation extends HealthEvaluation {
    /**
     * Id of the partition to which the replica belongs.
     */
    @JsonProperty(value = "PartitionId")
    private UUID partitionId;

    /**
     * Id of a stateful service replica or a stateless service instance. This
     * ID is used in the queries that apply to both stateful and stateless
     * services. It is used by Service Fabric to uniquely identify a replica of
     * a partition of a stateful service or an instance of a stateless service
     * partition. It is unique within a partition and does not change for the
     * lifetime of the replica or the instance. If a stateful replica gets
     * dropped and another replica gets created on the same node for the same
     * partition, it will get a different value for the ID. If a stateless
     * instance is failed over on the same or different node it will get a
     * different value for the ID.
     */
    @JsonProperty(value = "ReplicaOrInstanceId")
    private String replicaOrInstanceId;

    /**
     * List of unhealthy evaluations that led to the current aggregated health
     * state of the replica. The types of the unhealthy evaluations can be
     * EventHealthEvaluation.
     */
    @JsonProperty(value = "UnhealthyEvaluations")
    private List<HealthEvaluationWrapper> unhealthyEvaluations;

    /**
     * Get the partitionId value.
     *
     * @return the partitionId value
     */
    public UUID partitionId() {
        return this.partitionId;
    }

    /**
     * Set the partitionId value.
     *
     * @param partitionId the partitionId value to set
     * @return the ReplicaHealthEvaluation object itself.
     */
    public ReplicaHealthEvaluation withPartitionId(UUID partitionId) {
        this.partitionId = partitionId;
        return this;
    }

    /**
     * Get the replicaOrInstanceId value.
     *
     * @return the replicaOrInstanceId value
     */
    public String replicaOrInstanceId() {
        return this.replicaOrInstanceId;
    }

    /**
     * Set the replicaOrInstanceId value.
     *
     * @param replicaOrInstanceId the replicaOrInstanceId value to set
     * @return the ReplicaHealthEvaluation object itself.
     */
    public ReplicaHealthEvaluation withReplicaOrInstanceId(String replicaOrInstanceId) {
        this.replicaOrInstanceId = replicaOrInstanceId;
        return this;
    }

    /**
     * Get the unhealthyEvaluations value.
     *
     * @return the unhealthyEvaluations value
     */
    public List<HealthEvaluationWrapper> unhealthyEvaluations() {
        return this.unhealthyEvaluations;
    }

    /**
     * Set the unhealthyEvaluations value.
     *
     * @param unhealthyEvaluations the unhealthyEvaluations value to set
     * @return the ReplicaHealthEvaluation object itself.
     */
    public ReplicaHealthEvaluation withUnhealthyEvaluations(List<HealthEvaluationWrapper> unhealthyEvaluations) {
        this.unhealthyEvaluations = unhealthyEvaluations;
        return this;
    }

}
