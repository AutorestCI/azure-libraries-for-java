/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric.implementation;

import com.microsoft.azure.servicefabric.ApplicationStatus;
import java.util.List;
import com.microsoft.azure.servicefabric.ApplicationParameter;
import com.microsoft.azure.servicefabric.HealthState;
import com.microsoft.azure.servicefabric.ApplicationDefinitionKind;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Information about a Service Fabric application.
 */
public class ApplicationInfoInner {
    /**
     * The identity of the application. This is an encoded representation of
     * the application name. This is used in the REST APIs to identify the
     * application resource.
     * Starting in version 6.0, hierarchical names are delimited with the "\~"
     * character. For example, if the application name is "fabric:/myapp/app1",
     * the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1"
     * in previous versions.
     */
    @JsonProperty(value = "Id")
    private String id;

    /**
     * The name of the application, including the 'fabric:' URI scheme.
     */
    @JsonProperty(value = "Name")
    private String name;

    /**
     * The application type name as defined in the application manifest.
     */
    @JsonProperty(value = "TypeName")
    private String typeName;

    /**
     * The version of the application type as defined in the application
     * manifest.
     */
    @JsonProperty(value = "TypeVersion")
    private String typeVersion;

    /**
     * The status of the application. Possible values include: 'Invalid',
     * 'Ready', 'Upgrading', 'Creating', 'Deleting', 'Failed'.
     */
    @JsonProperty(value = "Status")
    private ApplicationStatus status;

    /**
     * List of application parameters with overridden values from their default
     * values specified in the application manifest.
     */
    @JsonProperty(value = "Parameters")
    private List<ApplicationParameter> parameters;

    /**
     * The health state of a Service Fabric entity such as Cluster, Node,
     * Application, Service, Partition, Replica etc. Possible values include:
     * 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'.
     */
    @JsonProperty(value = "HealthState")
    private HealthState healthState;

    /**
     * The mechanism used to define a Service Fabric application. Possible
     * values include: 'Invalid', 'ServiceFabricApplicationDescription',
     * 'Compose'.
     */
    @JsonProperty(value = "ApplicationDefinitionKind")
    private ApplicationDefinitionKind applicationDefinitionKind;

    /**
     * Get the id value.
     *
     * @return the id value
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id value.
     *
     * @param id the id value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name value.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name value.
     *
     * @param name the name value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the typeName value.
     *
     * @return the typeName value
     */
    public String typeName() {
        return this.typeName;
    }

    /**
     * Set the typeName value.
     *
     * @param typeName the typeName value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withTypeName(String typeName) {
        this.typeName = typeName;
        return this;
    }

    /**
     * Get the typeVersion value.
     *
     * @return the typeVersion value
     */
    public String typeVersion() {
        return this.typeVersion;
    }

    /**
     * Set the typeVersion value.
     *
     * @param typeVersion the typeVersion value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withTypeVersion(String typeVersion) {
        this.typeVersion = typeVersion;
        return this;
    }

    /**
     * Get the status value.
     *
     * @return the status value
     */
    public ApplicationStatus status() {
        return this.status;
    }

    /**
     * Set the status value.
     *
     * @param status the status value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withStatus(ApplicationStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the parameters value.
     *
     * @return the parameters value
     */
    public List<ApplicationParameter> parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters value.
     *
     * @param parameters the parameters value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withParameters(List<ApplicationParameter> parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Get the healthState value.
     *
     * @return the healthState value
     */
    public HealthState healthState() {
        return this.healthState;
    }

    /**
     * Set the healthState value.
     *
     * @param healthState the healthState value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withHealthState(HealthState healthState) {
        this.healthState = healthState;
        return this;
    }

    /**
     * Get the applicationDefinitionKind value.
     *
     * @return the applicationDefinitionKind value
     */
    public ApplicationDefinitionKind applicationDefinitionKind() {
        return this.applicationDefinitionKind;
    }

    /**
     * Set the applicationDefinitionKind value.
     *
     * @param applicationDefinitionKind the applicationDefinitionKind value to set
     * @return the ApplicationInfoInner object itself.
     */
    public ApplicationInfoInner withApplicationDefinitionKind(ApplicationDefinitionKind applicationDefinitionKind) {
        this.applicationDefinitionKind = applicationDefinitionKind;
        return this;
    }

}
