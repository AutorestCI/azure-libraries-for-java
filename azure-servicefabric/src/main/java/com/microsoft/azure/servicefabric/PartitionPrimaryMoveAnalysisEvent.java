/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.servicefabric;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Partition Primary Move Analysis event.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "Kind")
@JsonTypeName("PartitionPrimaryMoveAnalysis")
public class PartitionPrimaryMoveAnalysisEvent extends PartitionAnalysisEvent {
    /**
     * Time when the move was completed.
     */
    @JsonProperty(value = "WhenMoveCompleted", required = true)
    private DateTime whenMoveCompleted;

    /**
     * The name of a Service Fabric node.
     */
    @JsonProperty(value = "PreviousNode", required = true)
    private String previousNode;

    /**
     * The name of a Service Fabric node.
     */
    @JsonProperty(value = "CurrentNode", required = true)
    private String currentNode;

    /**
     * Move reason.
     */
    @JsonProperty(value = "MoveReason", required = true)
    private String moveReason;

    /**
     * Relevant traces.
     */
    @JsonProperty(value = "RelevantTraces", required = true)
    private String relevantTraces;

    /**
     * Get the whenMoveCompleted value.
     *
     * @return the whenMoveCompleted value
     */
    public DateTime whenMoveCompleted() {
        return this.whenMoveCompleted;
    }

    /**
     * Set the whenMoveCompleted value.
     *
     * @param whenMoveCompleted the whenMoveCompleted value to set
     * @return the PartitionPrimaryMoveAnalysisEvent object itself.
     */
    public PartitionPrimaryMoveAnalysisEvent withWhenMoveCompleted(DateTime whenMoveCompleted) {
        this.whenMoveCompleted = whenMoveCompleted;
        return this;
    }

    /**
     * Get the previousNode value.
     *
     * @return the previousNode value
     */
    public String previousNode() {
        return this.previousNode;
    }

    /**
     * Set the previousNode value.
     *
     * @param previousNode the previousNode value to set
     * @return the PartitionPrimaryMoveAnalysisEvent object itself.
     */
    public PartitionPrimaryMoveAnalysisEvent withPreviousNode(String previousNode) {
        this.previousNode = previousNode;
        return this;
    }

    /**
     * Get the currentNode value.
     *
     * @return the currentNode value
     */
    public String currentNode() {
        return this.currentNode;
    }

    /**
     * Set the currentNode value.
     *
     * @param currentNode the currentNode value to set
     * @return the PartitionPrimaryMoveAnalysisEvent object itself.
     */
    public PartitionPrimaryMoveAnalysisEvent withCurrentNode(String currentNode) {
        this.currentNode = currentNode;
        return this;
    }

    /**
     * Get the moveReason value.
     *
     * @return the moveReason value
     */
    public String moveReason() {
        return this.moveReason;
    }

    /**
     * Set the moveReason value.
     *
     * @param moveReason the moveReason value to set
     * @return the PartitionPrimaryMoveAnalysisEvent object itself.
     */
    public PartitionPrimaryMoveAnalysisEvent withMoveReason(String moveReason) {
        this.moveReason = moveReason;
        return this;
    }

    /**
     * Get the relevantTraces value.
     *
     * @return the relevantTraces value
     */
    public String relevantTraces() {
        return this.relevantTraces;
    }

    /**
     * Set the relevantTraces value.
     *
     * @param relevantTraces the relevantTraces value to set
     * @return the PartitionPrimaryMoveAnalysisEvent object itself.
     */
    public PartitionPrimaryMoveAnalysisEvent withRelevantTraces(String relevantTraces) {
        this.relevantTraces = relevantTraces;
        return this;
    }

}
