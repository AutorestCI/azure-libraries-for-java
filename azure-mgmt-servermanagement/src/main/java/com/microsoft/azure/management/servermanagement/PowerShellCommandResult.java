/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servermanagement;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Results from invoking a PowerShell command.
 */
public class PowerShellCommandResult {
    /**
     * The type of message.
     */
    @JsonProperty(value = "messageType")
    private Integer messageType;

    /**
     * The HTML color string representing the foreground color.
     */
    @JsonProperty(value = "foregroundColor")
    private String foregroundColor;

    /**
     * The HTML color string representing the background color.
     */
    @JsonProperty(value = "backgroundColor")
    private String backgroundColor;

    /**
     * Actual result text from the PowerShell Command.
     */
    @JsonProperty(value = "value")
    private String value;

    /**
     * The interactive prompt message.
     */
    @JsonProperty(value = "prompt")
    private String prompt;

    /**
     * The exit code from a executable that was called from PowerShell.
     */
    @JsonProperty(value = "exitCode")
    private Integer exitCode;

    /**
     * ID of the prompt message.
     */
    @JsonProperty(value = "id")
    private Integer id;

    /**
     * Text that precedes the prompt.
     */
    @JsonProperty(value = "caption")
    private String caption;

    /**
     * Text of the prompt.
     */
    @JsonProperty(value = "message")
    private String message;

    /**
     * Collection of PromptFieldDescription objects that contains the user
     * input.
     */
    @JsonProperty(value = "descriptions")
    private List<PromptFieldDescription> descriptions;

    /**
     * Get the type of message.
     *
     * @return the messageType value
     */
    public Integer messageType() {
        return this.messageType;
    }

    /**
     * Set the type of message.
     *
     * @param messageType the messageType value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withMessageType(Integer messageType) {
        this.messageType = messageType;
        return this;
    }

    /**
     * Get the HTML color string representing the foreground color.
     *
     * @return the foregroundColor value
     */
    public String foregroundColor() {
        return this.foregroundColor;
    }

    /**
     * Set the HTML color string representing the foreground color.
     *
     * @param foregroundColor the foregroundColor value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withForegroundColor(String foregroundColor) {
        this.foregroundColor = foregroundColor;
        return this;
    }

    /**
     * Get the HTML color string representing the background color.
     *
     * @return the backgroundColor value
     */
    public String backgroundColor() {
        return this.backgroundColor;
    }

    /**
     * Set the HTML color string representing the background color.
     *
     * @param backgroundColor the backgroundColor value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withBackgroundColor(String backgroundColor) {
        this.backgroundColor = backgroundColor;
        return this;
    }

    /**
     * Get actual result text from the PowerShell Command.
     *
     * @return the value value
     */
    public String value() {
        return this.value;
    }

    /**
     * Set actual result text from the PowerShell Command.
     *
     * @param value the value value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withValue(String value) {
        this.value = value;
        return this;
    }

    /**
     * Get the interactive prompt message.
     *
     * @return the prompt value
     */
    public String prompt() {
        return this.prompt;
    }

    /**
     * Set the interactive prompt message.
     *
     * @param prompt the prompt value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withPrompt(String prompt) {
        this.prompt = prompt;
        return this;
    }

    /**
     * Get the exit code from a executable that was called from PowerShell.
     *
     * @return the exitCode value
     */
    public Integer exitCode() {
        return this.exitCode;
    }

    /**
     * Set the exit code from a executable that was called from PowerShell.
     *
     * @param exitCode the exitCode value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withExitCode(Integer exitCode) {
        this.exitCode = exitCode;
        return this;
    }

    /**
     * Get iD of the prompt message.
     *
     * @return the id value
     */
    public Integer id() {
        return this.id;
    }

    /**
     * Set iD of the prompt message.
     *
     * @param id the id value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get text that precedes the prompt.
     *
     * @return the caption value
     */
    public String caption() {
        return this.caption;
    }

    /**
     * Set text that precedes the prompt.
     *
     * @param caption the caption value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withCaption(String caption) {
        this.caption = caption;
        return this;
    }

    /**
     * Get text of the prompt.
     *
     * @return the message value
     */
    public String message() {
        return this.message;
    }

    /**
     * Set text of the prompt.
     *
     * @param message the message value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get collection of PromptFieldDescription objects that contains the user input.
     *
     * @return the descriptions value
     */
    public List<PromptFieldDescription> descriptions() {
        return this.descriptions;
    }

    /**
     * Set collection of PromptFieldDescription objects that contains the user input.
     *
     * @param descriptions the descriptions value to set
     * @return the PowerShellCommandResult object itself.
     */
    public PowerShellCommandResult withDescriptions(List<PromptFieldDescription> descriptions) {
        this.descriptions = descriptions;
        return this;
    }

}
