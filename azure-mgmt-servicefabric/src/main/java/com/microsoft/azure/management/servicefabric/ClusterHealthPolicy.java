/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servicefabric;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Defines a health policy used to evaluate the health of the cluster or of a
 * cluster node.
 */
public class ClusterHealthPolicy {
    /**
     * The maximum allowed percentage of unhealthy nodes before reporting an
     * error. For example, to allow 10% of nodes to be unhealthy, this value
     * would be 10.
     *
     * The percentage represents the maximum tolerated percentage of nodes that
     * can be unhealthy before the cluster is considered in error.
     * If the percentage is respected but there is at least one unhealthy node,
     * the health is evaluated as Warning.
     * The percentage is calculated by dividing the number of unhealthy nodes
     * over the total number of nodes in the cluster.
     * The computation rounds up to tolerate one failure on small numbers of
     * nodes. Default percentage is zero.
     *
     * In large clusters, some nodes will always be down or out for repairs, so
     * this percentage should be configured to tolerate that.
     */
    @JsonProperty(value = "maxPercentUnhealthyNodes")
    private Integer maxPercentUnhealthyNodes;

    /**
     * The maximum allowed percentage of unhealthy applications before
     * reporting an error. For example, to allow 10% of applications to be
     * unhealthy, this value would be 10.
     *
     * The percentage represents the maximum tolerated percentage of
     * applications that can be unhealthy before the cluster is considered in
     * error.
     * If the percentage is respected but there is at least one unhealthy
     * application, the health is evaluated as Warning.
     * This is calculated by dividing the number of unhealthy applications over
     * the total number of application instances in the cluster, excluding
     * applications of application types that are included in the
     * ApplicationTypeHealthPolicyMap.
     * The computation rounds up to tolerate one failure on small numbers of
     * applications. Default percentage is zero.
     */
    @JsonProperty(value = "maxPercentUnhealthyApplications")
    private Integer maxPercentUnhealthyApplications;

    /**
     * Defines the application health policy map used to evaluate the health of
     * an application or one of its children entities.
     */
    @JsonProperty(value = "applicationHealthPolicies")
    private List<ApplicationHealthPolicyMapItem> applicationHealthPolicies;

    /**
     * Get the maxPercentUnhealthyNodes value.
     *
     * @return the maxPercentUnhealthyNodes value
     */
    public Integer maxPercentUnhealthyNodes() {
        return this.maxPercentUnhealthyNodes;
    }

    /**
     * Set the maxPercentUnhealthyNodes value.
     *
     * @param maxPercentUnhealthyNodes the maxPercentUnhealthyNodes value to set
     * @return the ClusterHealthPolicy object itself.
     */
    public ClusterHealthPolicy withMaxPercentUnhealthyNodes(Integer maxPercentUnhealthyNodes) {
        this.maxPercentUnhealthyNodes = maxPercentUnhealthyNodes;
        return this;
    }

    /**
     * Get the maxPercentUnhealthyApplications value.
     *
     * @return the maxPercentUnhealthyApplications value
     */
    public Integer maxPercentUnhealthyApplications() {
        return this.maxPercentUnhealthyApplications;
    }

    /**
     * Set the maxPercentUnhealthyApplications value.
     *
     * @param maxPercentUnhealthyApplications the maxPercentUnhealthyApplications value to set
     * @return the ClusterHealthPolicy object itself.
     */
    public ClusterHealthPolicy withMaxPercentUnhealthyApplications(Integer maxPercentUnhealthyApplications) {
        this.maxPercentUnhealthyApplications = maxPercentUnhealthyApplications;
        return this;
    }

    /**
     * Get the applicationHealthPolicies value.
     *
     * @return the applicationHealthPolicies value
     */
    public List<ApplicationHealthPolicyMapItem> applicationHealthPolicies() {
        return this.applicationHealthPolicies;
    }

    /**
     * Set the applicationHealthPolicies value.
     *
     * @param applicationHealthPolicies the applicationHealthPolicies value to set
     * @return the ClusterHealthPolicy object itself.
     */
    public ClusterHealthPolicy withApplicationHealthPolicies(List<ApplicationHealthPolicyMapItem> applicationHealthPolicies) {
        this.applicationHealthPolicies = applicationHealthPolicies;
        return this;
    }

}
