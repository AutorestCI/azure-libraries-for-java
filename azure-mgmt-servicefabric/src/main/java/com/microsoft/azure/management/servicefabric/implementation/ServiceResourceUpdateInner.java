/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.servicefabric.implementation;

import java.util.List;
import com.microsoft.azure.management.servicefabric.ServiceCorrelationDescription;
import com.microsoft.azure.management.servicefabric.ServiceLoadMetricDescription;
import com.microsoft.azure.management.servicefabric.ServicePlacementPolicyDescription;
import com.microsoft.azure.management.servicefabric.MoveCost;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.management.servicefabric.ProxyResource;

/**
 * The service resource for patch operations.
 */
@JsonFlatten
public class ServiceResourceUpdateInner extends ProxyResource {
    /**
     * The placement constraints as a string. Placement constraints are boolean
     * expressions on node properties and allow for restricting a service to
     * particular nodes based on the service requirements. For example, to
     * place a service on nodes where NodeType is blue specify the following:
     * "NodeColor == blue)".
     */
    @JsonProperty(value = "properties.placementConstraints")
    private String placementConstraints;

    /**
     * A list that describes the correlation of the service with other
     * services.
     */
    @JsonProperty(value = "properties.correlationScheme")
    private List<ServiceCorrelationDescription> correlationScheme;

    /**
     * The service load metrics is given as an array of
     * ServiceLoadMetricDescription objects.
     */
    @JsonProperty(value = "properties.serviceLoadMetrics")
    private List<ServiceLoadMetricDescription> serviceLoadMetrics;

    /**
     * A list that describes the correlation of the service with other
     * services.
     */
    @JsonProperty(value = "properties.servicePlacementPolicies")
    private List<ServicePlacementPolicyDescription> servicePlacementPolicies;

    /**
     * Specifies the move cost for the service. Possible values include:
     * 'Zero', 'Low', 'Medium', 'High'.
     */
    @JsonProperty(value = "properties.defaultMoveCost")
    private MoveCost defaultMoveCost;

    /**
     * Get the placementConstraints value.
     *
     * @return the placementConstraints value
     */
    public String placementConstraints() {
        return this.placementConstraints;
    }

    /**
     * Set the placementConstraints value.
     *
     * @param placementConstraints the placementConstraints value to set
     * @return the ServiceResourceUpdateInner object itself.
     */
    public ServiceResourceUpdateInner withPlacementConstraints(String placementConstraints) {
        this.placementConstraints = placementConstraints;
        return this;
    }

    /**
     * Get the correlationScheme value.
     *
     * @return the correlationScheme value
     */
    public List<ServiceCorrelationDescription> correlationScheme() {
        return this.correlationScheme;
    }

    /**
     * Set the correlationScheme value.
     *
     * @param correlationScheme the correlationScheme value to set
     * @return the ServiceResourceUpdateInner object itself.
     */
    public ServiceResourceUpdateInner withCorrelationScheme(List<ServiceCorrelationDescription> correlationScheme) {
        this.correlationScheme = correlationScheme;
        return this;
    }

    /**
     * Get the serviceLoadMetrics value.
     *
     * @return the serviceLoadMetrics value
     */
    public List<ServiceLoadMetricDescription> serviceLoadMetrics() {
        return this.serviceLoadMetrics;
    }

    /**
     * Set the serviceLoadMetrics value.
     *
     * @param serviceLoadMetrics the serviceLoadMetrics value to set
     * @return the ServiceResourceUpdateInner object itself.
     */
    public ServiceResourceUpdateInner withServiceLoadMetrics(List<ServiceLoadMetricDescription> serviceLoadMetrics) {
        this.serviceLoadMetrics = serviceLoadMetrics;
        return this;
    }

    /**
     * Get the servicePlacementPolicies value.
     *
     * @return the servicePlacementPolicies value
     */
    public List<ServicePlacementPolicyDescription> servicePlacementPolicies() {
        return this.servicePlacementPolicies;
    }

    /**
     * Set the servicePlacementPolicies value.
     *
     * @param servicePlacementPolicies the servicePlacementPolicies value to set
     * @return the ServiceResourceUpdateInner object itself.
     */
    public ServiceResourceUpdateInner withServicePlacementPolicies(List<ServicePlacementPolicyDescription> servicePlacementPolicies) {
        this.servicePlacementPolicies = servicePlacementPolicies;
        return this;
    }

    /**
     * Get the defaultMoveCost value.
     *
     * @return the defaultMoveCost value
     */
    public MoveCost defaultMoveCost() {
        return this.defaultMoveCost;
    }

    /**
     * Set the defaultMoveCost value.
     *
     * @param defaultMoveCost the defaultMoveCost value to set
     * @return the ServiceResourceUpdateInner object itself.
     */
    public ServiceResourceUpdateInner withDefaultMoveCost(MoveCost defaultMoveCost) {
        this.defaultMoveCost = defaultMoveCost;
        return this;
    }

}
