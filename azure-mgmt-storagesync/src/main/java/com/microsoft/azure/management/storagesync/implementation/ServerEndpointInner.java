/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storagesync.implementation;

import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.microsoft.rest.serializer.JsonFlatten;
import com.microsoft.azure.ProxyResource;

/**
 * Server Endpoint object.
 */
@JsonFlatten
public class ServerEndpointInner extends ProxyResource {
    /**
     * Server Local path.
     */
    @JsonProperty(value = "properties.serverLocalPath")
    private String serverLocalPath;

    /**
     * Cloud Tiering. Possible values include: 'on', 'off'.
     */
    @JsonProperty(value = "properties.cloudTiering")
    private String cloudTiering;

    /**
     * Level of free space to be maintained by Cloud Tiering if it is enabled.
     */
    @JsonProperty(value = "properties.volumeFreeSpacePercent")
    private Integer volumeFreeSpacePercent;

    /**
     * Friendly Name.
     */
    @JsonProperty(value = "properties.friendlyName")
    private String friendlyName;

    /**
     * Last Sync Success.
     */
    @JsonProperty(value = "properties.lastSyncSuccess")
    private DateTime lastSyncSuccess;

    /**
     * Sync Error State.
     */
    @JsonProperty(value = "properties.syncErrorState")
    private String syncErrorState;

    /**
     * Sync Error State Timestamp.
     */
    @JsonProperty(value = "properties.syncErrorStateTimestamp")
    private DateTime syncErrorStateTimestamp;

    /**
     * Sync Error Direction. Possible values include: 'none', 'initialize',
     * 'download', 'upload', 'recall'.
     */
    @JsonProperty(value = "properties.syncErrorDirection")
    private String syncErrorDirection;

    /**
     * Item Upload Error Count.
     */
    @JsonProperty(value = "properties.itemUploadErrorCount")
    private Integer itemUploadErrorCount;

    /**
     * Item download error count.
     */
    @JsonProperty(value = "properties.itemDownloadErrorCount")
    private Integer itemDownloadErrorCount;

    /**
     * sync error context.
     */
    @JsonProperty(value = "properties.syncErrorContext")
    private String syncErrorContext;

    /**
     * current progress type. Possible values include: 'none', 'initialize',
     * 'download', 'upload', 'recall'.
     */
    @JsonProperty(value = "properties.currentProgressType")
    private String currentProgressType;

    /**
     * Item Progress Count.
     */
    @JsonProperty(value = "properties.itemProgressCount")
    private Integer itemProgressCount;

    /**
     * Item Total Count.
     */
    @JsonProperty(value = "properties.itemTotalCount")
    private Integer itemTotalCount;

    /**
     * Bytes in progress.
     */
    @JsonProperty(value = "properties.byteProgress")
    private Integer byteProgress;

    /**
     * Total progress.
     */
    @JsonProperty(value = "properties.totalProgress")
    private Integer totalProgress;

    /**
     * Bytes total.
     */
    @JsonProperty(value = "properties.byteTotal")
    private Integer byteTotal;

    /**
     * Server Resource Id.
     */
    @JsonProperty(value = "properties.serverResourceId")
    private String serverResourceId;

    /**
     * ServerEndpoint Provisioning State.
     */
    @JsonProperty(value = "properties.provisioningState")
    private String provisioningState;

    /**
     * ServerEndpoint lastWorkflowId.
     */
    @JsonProperty(value = "properties.lastWorkflowId")
    private String lastWorkflowId;

    /**
     * Get server Local path.
     *
     * @return the serverLocalPath value
     */
    public String serverLocalPath() {
        return this.serverLocalPath;
    }

    /**
     * Set server Local path.
     *
     * @param serverLocalPath the serverLocalPath value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withServerLocalPath(String serverLocalPath) {
        this.serverLocalPath = serverLocalPath;
        return this;
    }

    /**
     * Get cloud Tiering. Possible values include: 'on', 'off'.
     *
     * @return the cloudTiering value
     */
    public String cloudTiering() {
        return this.cloudTiering;
    }

    /**
     * Set cloud Tiering. Possible values include: 'on', 'off'.
     *
     * @param cloudTiering the cloudTiering value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withCloudTiering(String cloudTiering) {
        this.cloudTiering = cloudTiering;
        return this;
    }

    /**
     * Get level of free space to be maintained by Cloud Tiering if it is enabled.
     *
     * @return the volumeFreeSpacePercent value
     */
    public Integer volumeFreeSpacePercent() {
        return this.volumeFreeSpacePercent;
    }

    /**
     * Set level of free space to be maintained by Cloud Tiering if it is enabled.
     *
     * @param volumeFreeSpacePercent the volumeFreeSpacePercent value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withVolumeFreeSpacePercent(Integer volumeFreeSpacePercent) {
        this.volumeFreeSpacePercent = volumeFreeSpacePercent;
        return this;
    }

    /**
     * Get friendly Name.
     *
     * @return the friendlyName value
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set friendly Name.
     *
     * @param friendlyName the friendlyName value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get last Sync Success.
     *
     * @return the lastSyncSuccess value
     */
    public DateTime lastSyncSuccess() {
        return this.lastSyncSuccess;
    }

    /**
     * Set last Sync Success.
     *
     * @param lastSyncSuccess the lastSyncSuccess value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withLastSyncSuccess(DateTime lastSyncSuccess) {
        this.lastSyncSuccess = lastSyncSuccess;
        return this;
    }

    /**
     * Get sync Error State.
     *
     * @return the syncErrorState value
     */
    public String syncErrorState() {
        return this.syncErrorState;
    }

    /**
     * Set sync Error State.
     *
     * @param syncErrorState the syncErrorState value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withSyncErrorState(String syncErrorState) {
        this.syncErrorState = syncErrorState;
        return this;
    }

    /**
     * Get sync Error State Timestamp.
     *
     * @return the syncErrorStateTimestamp value
     */
    public DateTime syncErrorStateTimestamp() {
        return this.syncErrorStateTimestamp;
    }

    /**
     * Set sync Error State Timestamp.
     *
     * @param syncErrorStateTimestamp the syncErrorStateTimestamp value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withSyncErrorStateTimestamp(DateTime syncErrorStateTimestamp) {
        this.syncErrorStateTimestamp = syncErrorStateTimestamp;
        return this;
    }

    /**
     * Get sync Error Direction. Possible values include: 'none', 'initialize', 'download', 'upload', 'recall'.
     *
     * @return the syncErrorDirection value
     */
    public String syncErrorDirection() {
        return this.syncErrorDirection;
    }

    /**
     * Set sync Error Direction. Possible values include: 'none', 'initialize', 'download', 'upload', 'recall'.
     *
     * @param syncErrorDirection the syncErrorDirection value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withSyncErrorDirection(String syncErrorDirection) {
        this.syncErrorDirection = syncErrorDirection;
        return this;
    }

    /**
     * Get item Upload Error Count.
     *
     * @return the itemUploadErrorCount value
     */
    public Integer itemUploadErrorCount() {
        return this.itemUploadErrorCount;
    }

    /**
     * Set item Upload Error Count.
     *
     * @param itemUploadErrorCount the itemUploadErrorCount value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withItemUploadErrorCount(Integer itemUploadErrorCount) {
        this.itemUploadErrorCount = itemUploadErrorCount;
        return this;
    }

    /**
     * Get item download error count.
     *
     * @return the itemDownloadErrorCount value
     */
    public Integer itemDownloadErrorCount() {
        return this.itemDownloadErrorCount;
    }

    /**
     * Set item download error count.
     *
     * @param itemDownloadErrorCount the itemDownloadErrorCount value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withItemDownloadErrorCount(Integer itemDownloadErrorCount) {
        this.itemDownloadErrorCount = itemDownloadErrorCount;
        return this;
    }

    /**
     * Get sync error context.
     *
     * @return the syncErrorContext value
     */
    public String syncErrorContext() {
        return this.syncErrorContext;
    }

    /**
     * Set sync error context.
     *
     * @param syncErrorContext the syncErrorContext value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withSyncErrorContext(String syncErrorContext) {
        this.syncErrorContext = syncErrorContext;
        return this;
    }

    /**
     * Get current progress type. Possible values include: 'none', 'initialize', 'download', 'upload', 'recall'.
     *
     * @return the currentProgressType value
     */
    public String currentProgressType() {
        return this.currentProgressType;
    }

    /**
     * Set current progress type. Possible values include: 'none', 'initialize', 'download', 'upload', 'recall'.
     *
     * @param currentProgressType the currentProgressType value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withCurrentProgressType(String currentProgressType) {
        this.currentProgressType = currentProgressType;
        return this;
    }

    /**
     * Get item Progress Count.
     *
     * @return the itemProgressCount value
     */
    public Integer itemProgressCount() {
        return this.itemProgressCount;
    }

    /**
     * Set item Progress Count.
     *
     * @param itemProgressCount the itemProgressCount value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withItemProgressCount(Integer itemProgressCount) {
        this.itemProgressCount = itemProgressCount;
        return this;
    }

    /**
     * Get item Total Count.
     *
     * @return the itemTotalCount value
     */
    public Integer itemTotalCount() {
        return this.itemTotalCount;
    }

    /**
     * Set item Total Count.
     *
     * @param itemTotalCount the itemTotalCount value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withItemTotalCount(Integer itemTotalCount) {
        this.itemTotalCount = itemTotalCount;
        return this;
    }

    /**
     * Get bytes in progress.
     *
     * @return the byteProgress value
     */
    public Integer byteProgress() {
        return this.byteProgress;
    }

    /**
     * Set bytes in progress.
     *
     * @param byteProgress the byteProgress value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withByteProgress(Integer byteProgress) {
        this.byteProgress = byteProgress;
        return this;
    }

    /**
     * Get total progress.
     *
     * @return the totalProgress value
     */
    public Integer totalProgress() {
        return this.totalProgress;
    }

    /**
     * Set total progress.
     *
     * @param totalProgress the totalProgress value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withTotalProgress(Integer totalProgress) {
        this.totalProgress = totalProgress;
        return this;
    }

    /**
     * Get bytes total.
     *
     * @return the byteTotal value
     */
    public Integer byteTotal() {
        return this.byteTotal;
    }

    /**
     * Set bytes total.
     *
     * @param byteTotal the byteTotal value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withByteTotal(Integer byteTotal) {
        this.byteTotal = byteTotal;
        return this;
    }

    /**
     * Get server Resource Id.
     *
     * @return the serverResourceId value
     */
    public String serverResourceId() {
        return this.serverResourceId;
    }

    /**
     * Set server Resource Id.
     *
     * @param serverResourceId the serverResourceId value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withServerResourceId(String serverResourceId) {
        this.serverResourceId = serverResourceId;
        return this;
    }

    /**
     * Get serverEndpoint Provisioning State.
     *
     * @return the provisioningState value
     */
    public String provisioningState() {
        return this.provisioningState;
    }

    /**
     * Set serverEndpoint Provisioning State.
     *
     * @param provisioningState the provisioningState value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withProvisioningState(String provisioningState) {
        this.provisioningState = provisioningState;
        return this;
    }

    /**
     * Get serverEndpoint lastWorkflowId.
     *
     * @return the lastWorkflowId value
     */
    public String lastWorkflowId() {
        return this.lastWorkflowId;
    }

    /**
     * Set serverEndpoint lastWorkflowId.
     *
     * @param lastWorkflowId the lastWorkflowId value to set
     * @return the ServerEndpointInner object itself.
     */
    public ServerEndpointInner withLastWorkflowId(String lastWorkflowId) {
        this.lastWorkflowId = lastWorkflowId;
        return this;
    }

}
