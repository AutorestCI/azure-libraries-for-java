/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.adhybridhealthservice.implementation;

import com.microsoft.azure.management.adhybridhealthservice.HealthStatus;
import org.joda.time.DateTime;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The connector object error.
 */
public class DimensionInner {
    /**
     * The health status for the domain controller. Possible values include:
     * 'Healthy', 'Warning', 'Error', 'NotMonitored', 'Missing'.
     */
    @JsonProperty(value = "status")
    private HealthStatus status;

    /**
     * List of service specific configuration properties.
     */
    @JsonProperty(value = "simpleProperties")
    private Object simpleProperties;

    /**
     * The count of alerts that are currently active for the service.
     */
    @JsonProperty(value = "activeAlerts")
    private Integer activeAlerts;

    /**
     * The additional information related to the service.
     */
    @JsonProperty(value = "additionalInformation")
    private String additionalInformation;

    /**
     * The date or time , in UTC, when the service properties were last
     * updated.
     */
    @JsonProperty(value = "lastUpdated")
    private DateTime lastUpdated;

    /**
     * The display name of the service.
     */
    @JsonProperty(value = "displayName")
    private String displayName;

    /**
     * The total count of alerts that has been resolved for the service.
     */
    @JsonProperty(value = "resolvedAlerts")
    private Integer resolvedAlerts;

    /**
     * The signature of the service.
     */
    @JsonProperty(value = "signature")
    private String signature;

    /**
     * The service type for the services onboarded to Azure Active Directory
     * Connect Health. Depending on whether the service is monitoring, ADFS,
     * Sync or ADDS roles, the service type can either be AdFederationService
     * or AadSyncService or AdDomainService.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Get the status value.
     *
     * @return the status value
     */
    public HealthStatus status() {
        return this.status;
    }

    /**
     * Set the status value.
     *
     * @param status the status value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withStatus(HealthStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the simpleProperties value.
     *
     * @return the simpleProperties value
     */
    public Object simpleProperties() {
        return this.simpleProperties;
    }

    /**
     * Set the simpleProperties value.
     *
     * @param simpleProperties the simpleProperties value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withSimpleProperties(Object simpleProperties) {
        this.simpleProperties = simpleProperties;
        return this;
    }

    /**
     * Get the activeAlerts value.
     *
     * @return the activeAlerts value
     */
    public Integer activeAlerts() {
        return this.activeAlerts;
    }

    /**
     * Set the activeAlerts value.
     *
     * @param activeAlerts the activeAlerts value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withActiveAlerts(Integer activeAlerts) {
        this.activeAlerts = activeAlerts;
        return this;
    }

    /**
     * Get the additionalInformation value.
     *
     * @return the additionalInformation value
     */
    public String additionalInformation() {
        return this.additionalInformation;
    }

    /**
     * Set the additionalInformation value.
     *
     * @param additionalInformation the additionalInformation value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withAdditionalInformation(String additionalInformation) {
        this.additionalInformation = additionalInformation;
        return this;
    }

    /**
     * Get the lastUpdated value.
     *
     * @return the lastUpdated value
     */
    public DateTime lastUpdated() {
        return this.lastUpdated;
    }

    /**
     * Set the lastUpdated value.
     *
     * @param lastUpdated the lastUpdated value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withLastUpdated(DateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }

    /**
     * Get the displayName value.
     *
     * @return the displayName value
     */
    public String displayName() {
        return this.displayName;
    }

    /**
     * Set the displayName value.
     *
     * @param displayName the displayName value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }

    /**
     * Get the resolvedAlerts value.
     *
     * @return the resolvedAlerts value
     */
    public Integer resolvedAlerts() {
        return this.resolvedAlerts;
    }

    /**
     * Set the resolvedAlerts value.
     *
     * @param resolvedAlerts the resolvedAlerts value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withResolvedAlerts(Integer resolvedAlerts) {
        this.resolvedAlerts = resolvedAlerts;
        return this;
    }

    /**
     * Get the signature value.
     *
     * @return the signature value
     */
    public String signature() {
        return this.signature;
    }

    /**
     * Set the signature value.
     *
     * @param signature the signature value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withSignature(String signature) {
        this.signature = signature;
        return this;
    }

    /**
     * Get the type value.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type value.
     *
     * @param type the type value to set
     * @return the DimensionInner object itself.
     */
    public DimensionInner withType(String type) {
        this.type = type;
        return this;
    }

}
