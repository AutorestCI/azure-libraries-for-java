/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.adhybridhealthservice;

import org.joda.time.DateTime;
import java.util.UUID;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The replication summary for a domain controller.
 */
public class ReplicationSummary {
    /**
     * The domain controller name.
     */
    @JsonProperty(value = "targetServer")
    private String targetServer;

    /**
     * The site name for a given domain controller.
     */
    @JsonProperty(value = "site")
    private String site;

    /**
     * The domain name for a given domain controller.
     */
    @JsonProperty(value = "domain")
    private String domain;

    /**
     * The health status for a domain controller. Possible values include:
     * 'Healthy', 'Warning', 'Error', 'NotMonitored', 'Missing'.
     */
    @JsonProperty(value = "status")
    private HealthStatus status;

    /**
     * The last time when a sync was attempted for a given domain controller.
     */
    @JsonProperty(value = "lastAttemptedSync")
    private DateTime lastAttemptedSync;

    /**
     * The time when the last successful sync happened for a given domain
     * controller.
     */
    @JsonProperty(value = "lastSuccessfulSync")
    private DateTime lastSuccessfulSync;

    /**
     * The service Id.
     */
    @JsonProperty(value = "serviceId")
    private UUID serviceId;

    /**
     * The serviceMemberId.
     */
    @JsonProperty(value = "serviceMemberId")
    private UUID serviceMemberId;

    /**
     * List of individual domain controller neighbor's inbound replication
     * status.
     */
    @JsonProperty(value = "inboundNeighborCollection")
    private List<InboundReplicationNeighbor> inboundNeighborCollection;

    /**
     * Get the targetServer value.
     *
     * @return the targetServer value
     */
    public String targetServer() {
        return this.targetServer;
    }

    /**
     * Set the targetServer value.
     *
     * @param targetServer the targetServer value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withTargetServer(String targetServer) {
        this.targetServer = targetServer;
        return this;
    }

    /**
     * Get the site value.
     *
     * @return the site value
     */
    public String site() {
        return this.site;
    }

    /**
     * Set the site value.
     *
     * @param site the site value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withSite(String site) {
        this.site = site;
        return this;
    }

    /**
     * Get the domain value.
     *
     * @return the domain value
     */
    public String domain() {
        return this.domain;
    }

    /**
     * Set the domain value.
     *
     * @param domain the domain value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withDomain(String domain) {
        this.domain = domain;
        return this;
    }

    /**
     * Get the status value.
     *
     * @return the status value
     */
    public HealthStatus status() {
        return this.status;
    }

    /**
     * Set the status value.
     *
     * @param status the status value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withStatus(HealthStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Get the lastAttemptedSync value.
     *
     * @return the lastAttemptedSync value
     */
    public DateTime lastAttemptedSync() {
        return this.lastAttemptedSync;
    }

    /**
     * Set the lastAttemptedSync value.
     *
     * @param lastAttemptedSync the lastAttemptedSync value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withLastAttemptedSync(DateTime lastAttemptedSync) {
        this.lastAttemptedSync = lastAttemptedSync;
        return this;
    }

    /**
     * Get the lastSuccessfulSync value.
     *
     * @return the lastSuccessfulSync value
     */
    public DateTime lastSuccessfulSync() {
        return this.lastSuccessfulSync;
    }

    /**
     * Set the lastSuccessfulSync value.
     *
     * @param lastSuccessfulSync the lastSuccessfulSync value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withLastSuccessfulSync(DateTime lastSuccessfulSync) {
        this.lastSuccessfulSync = lastSuccessfulSync;
        return this;
    }

    /**
     * Get the serviceId value.
     *
     * @return the serviceId value
     */
    public UUID serviceId() {
        return this.serviceId;
    }

    /**
     * Set the serviceId value.
     *
     * @param serviceId the serviceId value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withServiceId(UUID serviceId) {
        this.serviceId = serviceId;
        return this;
    }

    /**
     * Get the serviceMemberId value.
     *
     * @return the serviceMemberId value
     */
    public UUID serviceMemberId() {
        return this.serviceMemberId;
    }

    /**
     * Set the serviceMemberId value.
     *
     * @param serviceMemberId the serviceMemberId value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withServiceMemberId(UUID serviceMemberId) {
        this.serviceMemberId = serviceMemberId;
        return this;
    }

    /**
     * Get the inboundNeighborCollection value.
     *
     * @return the inboundNeighborCollection value
     */
    public List<InboundReplicationNeighbor> inboundNeighborCollection() {
        return this.inboundNeighborCollection;
    }

    /**
     * Set the inboundNeighborCollection value.
     *
     * @param inboundNeighborCollection the inboundNeighborCollection value to set
     * @return the ReplicationSummary object itself.
     */
    public ReplicationSummary withInboundNeighborCollection(List<InboundReplicationNeighbor> inboundNeighborCollection) {
        this.inboundNeighborCollection = inboundNeighborCollection;
        return this;
    }

}
